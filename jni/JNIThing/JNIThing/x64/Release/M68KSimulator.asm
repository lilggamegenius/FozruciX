; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23506.0 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?ramStart@@3PEATmem_union@@EA			; ramStart
PUBLIC	?dataRegisters@@3PAPEATregisters@@A		; dataRegisters
PUBLIC	?addressRegisters@@3PAPEATregisters@@A		; addressRegisters
PUBLIC	?programCounter@@3IA				; programCounter
_BSS	SEGMENT
?ramStart@@3PEATmem_union@@EA DQ 01H DUP (?)		; ramStart
?dataRegisters@@3PAPEATregisters@@A DQ 08H DUP (?)	; dataRegisters
?addressRegisters@@3PAPEATregisters@@A DQ 09H DUP (?)	; addressRegisters
?programCounter@@3IA DD 01H DUP (?)			; programCounter
_BSS	ENDS
PUBLIC	__local_stdio_printf_options
PUBLIC	??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>
PUBLIC	printf
PUBLIC	start
PUBLIC	close
PUBLIC	setByte
PUBLIC	setWord
PUBLIC	setLongWord
PUBLIC	addByte
PUBLIC	addWord
PUBLIC	addLongWord
PUBLIC	getByte
PUBLIC	getWord
PUBLIC	getLongWord
PUBLIC	clearMem
PUBLIC	getRamStart
PUBLIC	getRamSize
PUBLIC	?lea@@YAXGW4AddressRegister@@@Z			; lea
PUBLIC	?pea@@YAXG@Z					; pea
PUBLIC	?add@@YAXW4Size@@W4DataRegister@@G@Z		; add
PUBLIC	?add@@YAXW4Size@@GW4DataRegister@@@Z		; add
PUBLIC	?adda@@YAXW4Size@@GW4AddressRegister@@@Z	; adda
PUBLIC	?addi@@YAXW4Size@@GI@Z				; addi
PUBLIC	?and@@YAXW4Size@@W4DataRegister@@G@Z		; and
PUBLIC	?and@@YAXW4Size@@GW4DataRegister@@@Z		; and
PUBLIC	?move@@YAXW4Size@@GG@Z				; move
PUBLIC	?move@@YAXW4Size@@GW4DataRegister@@@Z		; move
PUBLIC	?move@@YAXW4Size@@W4DataRegister@@G@Z		; move
PUBLIC	?move@@YAXW4Size@@W4DataRegister@@1@Z		; move
PUBLIC	?moveq@@YAXW4Size@@EG@Z				; moveq
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_C@_0BD@JCDCPOBF@DEBUG?5?9?5DLL?5Loaded?$AA@	; `string'
PUBLIC	??_C@_0CO@FJDOOOIP@DEBUG?5?9?5M68K?5ram?5created?4?5Starti@ ; `string'
EXTRN	__imp___acrt_iob_func:PROC
EXTRN	__imp___stdio_common_vfprintf:PROC
EXTRN	__imp_free:PROC
EXTRN	__imp_malloc:PROC
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN4
	DD	imagerel $LN4+81
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN8
	DD	imagerel $LN8+85
	DD	imagerel $unwind$printf
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$start DD	imagerel $LN11
	DD	imagerel $LN11+113
	DD	imagerel $unwind$start
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$close DD	imagerel $LN11
	DD	imagerel $LN11+66
	DD	imagerel $unwind$close
pdata	ENDS
;	COMDAT ??_C@_0CO@FJDOOOIP@DEBUG?5?9?5M68K?5ram?5created?4?5Starti@
CONST	SEGMENT
??_C@_0CO@FJDOOOIP@DEBUG?5?9?5M68K?5ram?5created?4?5Starti@ DB 'DEBUG - M'
	DB	'68K ram created. Starting offset: %p', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JCDCPOBF@DEBUG?5?9?5DLL?5Loaded?$AA@
CONST	SEGMENT
??_C@_0BD@JCDCPOBF@DEBUG?5?9?5DLL?5Loaded?$AA@ DB 'DEBUG - DLL Loaded', 00H ; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$close DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$start DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 041b01H
	DD	07017521bH
	DD	030156016H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 081401H
	DD	0a6414H
	DD	095414H
	DD	083414H
	DD	070105214H
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?moveq@@YAXW4Size@@EG@Z
_TEXT	SEGMENT
size$ = 8
source$ = 16
destination$ = 24
?moveq@@YAXW4Size@@EG@Z PROC				; moveq, COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 225
	test	ecx, ecx
	je	SHORT $LN4@moveq
	sub	ecx, 1
	je	SHORT $LN5@moveq
	cmp	ecx, 1
	jne	SHORT $LN2@moveq
; Line 47
	mov	rcx, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
; Line 69
	movzx	eax, dl
; Line 47
	movzx	edx, r8w
	mov	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR [rcx+rdx*4], eax
; Line 235
	ret	0
$LN5@moveq:
; Line 43
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	ecx, r8w
; Line 230
	movzx	edx, dl
; Line 43
	mov	WORD PTR [rax+rcx*2], dx
; Line 235
	ret	0
$LN4@moveq:
; Line 39
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	ecx, r8w
	mov	BYTE PTR [rcx+rax], dl
$LN2@moveq:
; Line 235
	ret	0
?moveq@@YAXW4Size@@EG@Z ENDP				; moveq
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?move@@YAXW4Size@@W4DataRegister@@1@Z
_TEXT	SEGMENT
size$ = 8
source$ = 16
destination$ = 24
?move@@YAXW4Size@@W4DataRegister@@1@Z PROC		; move, COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 212
	test	ecx, ecx
	je	SHORT $LN4@move
	sub	ecx, 1
	je	SHORT $LN5@move
	cmp	ecx, 1
	jne	SHORT $LN2@move
; Line 220
	movsxd	rax, edx
	lea	rcx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
	mov	rdx, QWORD PTR [rcx+rax*8]
	movsxd	rax, r8d
	mov	rcx, QWORD PTR [rcx+rax*8]
	mov	eax, DWORD PTR [rdx]
	mov	DWORD PTR [rcx], eax
; Line 222
	ret	0
$LN5@move:
; Line 217
	movsxd	rax, edx
	lea	rcx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
	mov	rdx, QWORD PTR [rcx+rax*8]
	movsxd	rax, r8d
	mov	rcx, QWORD PTR [rcx+rax*8]
	movzx	eax, WORD PTR [rdx]
	mov	WORD PTR [rcx], ax
; Line 222
	ret	0
$LN4@move:
; Line 214
	movsxd	rax, edx
	lea	rcx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
	mov	rdx, QWORD PTR [rcx+rax*8]
	movsxd	rax, r8d
	mov	rcx, QWORD PTR [rcx+rax*8]
	movzx	eax, BYTE PTR [rdx]
	mov	BYTE PTR [rcx], al
$LN2@move:
; Line 222
	ret	0
?move@@YAXW4Size@@W4DataRegister@@1@Z ENDP		; move
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?move@@YAXW4Size@@W4DataRegister@@G@Z
_TEXT	SEGMENT
size$ = 8
source$ = 16
destination$ = 24
?move@@YAXW4Size@@W4DataRegister@@G@Z PROC		; move, COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 199
	test	ecx, ecx
	je	SHORT $LN4@move
	sub	ecx, 1
	je	SHORT $LN5@move
	cmp	ecx, 1
	jne	SHORT $LN2@move
; Line 207
	movsxd	rax, edx
	lea	rcx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
; Line 47
	movzx	edx, r8w
; Line 207
	mov	rax, QWORD PTR [rcx+rax*8]
; Line 47
	mov	ecx, DWORD PTR [rax]
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	mov	DWORD PTR [rax+rdx*4], ecx
; Line 209
	ret	0
$LN5@move:
; Line 204
	movsxd	rax, edx
	lea	rcx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
; Line 43
	movzx	edx, r8w
; Line 204
	mov	rax, QWORD PTR [rcx+rax*8]
; Line 43
	movzx	ecx, WORD PTR [rax]
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	mov	WORD PTR [rax+rdx*2], cx
; Line 209
	ret	0
$LN4@move:
; Line 201
	movsxd	rax, edx
	lea	rcx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
; Line 39
	movzx	edx, r8w
; Line 201
	mov	rax, QWORD PTR [rcx+rax*8]
; Line 39
	movzx	ecx, BYTE PTR [rax]
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	mov	BYTE PTR [rdx+rax], cl
$LN2@move:
; Line 209
	ret	0
?move@@YAXW4Size@@W4DataRegister@@G@Z ENDP		; move
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?move@@YAXW4Size@@GW4DataRegister@@@Z
_TEXT	SEGMENT
size$ = 8
source$ = 16
destination$ = 24
?move@@YAXW4Size@@GW4DataRegister@@@Z PROC		; move, COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 186
	test	ecx, ecx
	je	SHORT $LN4@move
	sub	ecx, 1
	je	SHORT $LN5@move
	cmp	ecx, 1
	jne	SHORT $LN2@move
; Line 69
	movzx	ecx, dx
; Line 194
	lea	rdx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
	movsxd	rax, r8d
	mov	rdx, QWORD PTR [rdx+rax*8]
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	mov	ecx, DWORD PTR [rax+rcx*4]
	mov	DWORD PTR [rdx], ecx
; Line 196
	ret	0
$LN5@move:
; Line 66
	movzx	ecx, dx
; Line 191
	lea	rdx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
	movsxd	rax, r8d
	mov	rdx, QWORD PTR [rdx+rax*8]
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	ecx, WORD PTR [rax+rcx*2]
	mov	WORD PTR [rdx], cx
; Line 196
	ret	0
$LN4@move:
; Line 63
	movzx	ecx, dx
; Line 188
	lea	rdx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
	movsxd	rax, r8d
	mov	rdx, QWORD PTR [rdx+rax*8]
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	ecx, BYTE PTR [rcx+rax]
	mov	BYTE PTR [rdx], cl
$LN2@move:
; Line 196
	ret	0
?move@@YAXW4Size@@GW4DataRegister@@@Z ENDP		; move
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?move@@YAXW4Size@@GG@Z
_TEXT	SEGMENT
size$ = 8
source$ = 16
destination$ = 24
?move@@YAXW4Size@@GG@Z PROC				; move, COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 173
	test	ecx, ecx
	je	SHORT $LN4@move
	sub	ecx, 1
	je	SHORT $LN5@move
	cmp	ecx, 1
	jne	SHORT $LN2@move
; Line 47
	mov	rcx, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
; Line 69
	movzx	eax, dx
; Line 47
	movzx	edx, r8w
	mov	eax, DWORD PTR [rcx+rax*4]
	mov	DWORD PTR [rcx+rdx*4], eax
; Line 183
	ret	0
$LN5@move:
; Line 43
	mov	rcx, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
; Line 66
	movzx	eax, dx
; Line 43
	movzx	edx, r8w
	movzx	eax, WORD PTR [rcx+rax*2]
	mov	WORD PTR [rcx+rdx*2], ax
; Line 183
	ret	0
$LN4@move:
; Line 39
	mov	rcx, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
; Line 63
	movzx	eax, dx
; Line 39
	movzx	edx, r8w
	movzx	eax, BYTE PTR [rax+rcx]
	mov	BYTE PTR [rdx+rcx], al
$LN2@move:
; Line 183
	ret	0
?move@@YAXW4Size@@GG@Z ENDP				; move
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?and@@YAXW4Size@@GW4DataRegister@@@Z
_TEXT	SEGMENT
size$ = 8
ea$ = 16
dn$ = 24
?and@@YAXW4Size@@GW4DataRegister@@@Z PROC		; and, COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 159
	movzx	r9d, dx
; Line 160
	test	ecx, ecx
	je	SHORT $LN4@and
	sub	ecx, 1
	je	SHORT $LN5@and
	cmp	ecx, 1
	jne	SHORT $LN2@and
; Line 168
	movsxd	rax, r8d
	lea	rdx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
; Line 69
	movzx	ecx, r9w
	mov	rdx, QWORD PTR [rdx+rax*8]
; Line 168
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	mov	ecx, DWORD PTR [rax+rcx*4]
	and	DWORD PTR [rdx], ecx
; Line 170
	ret	0
$LN5@and:
; Line 165
	movsxd	rax, r8d
	lea	rdx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
; Line 66
	movzx	ecx, r9w
	mov	rdx, QWORD PTR [rdx+rax*8]
; Line 165
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	ecx, WORD PTR [rax+rcx*2]
	and	WORD PTR [rdx], cx
; Line 170
	ret	0
$LN4@and:
; Line 162
	movsxd	rax, r8d
	lea	rdx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
; Line 63
	movzx	ecx, r9w
	mov	rdx, QWORD PTR [rdx+rax*8]
; Line 162
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	ecx, BYTE PTR [rcx+rax]
	and	BYTE PTR [rdx], cl
$LN2@and:
; Line 170
	ret	0
?and@@YAXW4Size@@GW4DataRegister@@@Z ENDP		; and
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?and@@YAXW4Size@@W4DataRegister@@G@Z
_TEXT	SEGMENT
size$ = 8
dn$ = 16
ea$ = 24
?and@@YAXW4Size@@W4DataRegister@@G@Z PROC		; and, COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 146
	movsxd	r9, edx
; Line 147
	test	ecx, ecx
	je	SHORT $LN4@and
	sub	ecx, 1
	je	SHORT $LN5@and
	cmp	ecx, 1
	jne	SHORT $LN2@and
; Line 69
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	ecx, r8w
	lea	rdx, QWORD PTR [rax+rcx*4]
; Line 155
	lea	rcx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
	mov	rax, QWORD PTR [rcx+r9*8]
; Line 47
	mov	ecx, DWORD PTR [rax]
	and	DWORD PTR [rdx], ecx
; Line 157
	ret	0
$LN5@and:
; Line 66
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	ecx, r8w
	lea	rdx, QWORD PTR [rax+rcx*2]
; Line 152
	lea	rcx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
	mov	rax, QWORD PTR [rcx+r9*8]
; Line 43
	movzx	ecx, WORD PTR [rax]
	and	WORD PTR [rdx], cx
; Line 157
	ret	0
$LN4@and:
; Line 149
	lea	rcx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
; Line 63
	movzx	edx, r8w
; Line 149
	mov	rax, QWORD PTR [rcx+r9*8]
; Line 63
	add	rdx, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
; Line 39
	movzx	ecx, BYTE PTR [rax]
	and	BYTE PTR [rdx], cl
$LN2@and:
; Line 157
	ret	0
?and@@YAXW4Size@@W4DataRegister@@G@Z ENDP		; and
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?addi@@YAXW4Size@@GI@Z
_TEXT	SEGMENT
size$ = 8
ea$ = 16
data$ = 24
?addi@@YAXW4Size@@GI@Z PROC				; addi, COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 134
	test	ecx, ecx
	je	SHORT $LN4@addi
	sub	ecx, 1
	je	SHORT $LN5@addi
	cmp	ecx, 1
	jne	SHORT $LN2@addi
; Line 59
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	ecx, dx
	mov	DWORD PTR [rax+rcx*4], r8d
; Line 144
	ret	0
$LN5@addi:
; Line 55
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	ecx, dx
	mov	WORD PTR [rax+rcx*2], r8w
; Line 144
	ret	0
$LN4@addi:
; Line 51
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	ecx, dx
	mov	BYTE PTR [rcx+rax], r8b
$LN2@addi:
; Line 144
	ret	0
?addi@@YAXW4Size@@GI@Z ENDP				; addi
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?adda@@YAXW4Size@@GW4AddressRegister@@@Z
_TEXT	SEGMENT
size$ = 8
ea$ = 16
an$ = 24
?adda@@YAXW4Size@@GW4AddressRegister@@@Z PROC		; adda, COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 120
	movzx	r9d, dx
; Line 121
	test	ecx, ecx
	je	SHORT $LN4@adda
	sub	ecx, 1
	je	SHORT $LN5@adda
	cmp	ecx, 1
	jne	SHORT $LN2@adda
; Line 129
	movsxd	rax, r8d
	lea	rdx, OFFSET FLAT:?addressRegisters@@3PAPEATregisters@@A ; addressRegisters
; Line 69
	movzx	ecx, r9w
	mov	rdx, QWORD PTR [rdx+rax*8]
; Line 129
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	mov	ecx, DWORD PTR [rax+rcx*4]
	add	DWORD PTR [rdx], ecx
; Line 131
	ret	0
$LN5@adda:
; Line 126
	movsxd	rax, r8d
	lea	rdx, OFFSET FLAT:?addressRegisters@@3PAPEATregisters@@A ; addressRegisters
; Line 66
	movzx	ecx, r9w
	mov	rdx, QWORD PTR [rdx+rax*8]
; Line 126
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	ecx, WORD PTR [rax+rcx*2]
	add	WORD PTR [rdx], cx
; Line 131
	ret	0
$LN4@adda:
; Line 123
	movsxd	rax, r8d
	lea	rdx, OFFSET FLAT:?addressRegisters@@3PAPEATregisters@@A ; addressRegisters
; Line 63
	movzx	ecx, r9w
	mov	rdx, QWORD PTR [rdx+rax*8]
; Line 123
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	ecx, BYTE PTR [rcx+rax]
	add	BYTE PTR [rdx], cl
$LN2@adda:
; Line 131
	ret	0
?adda@@YAXW4Size@@GW4AddressRegister@@@Z ENDP		; adda
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?add@@YAXW4Size@@GW4DataRegister@@@Z
_TEXT	SEGMENT
size$ = 8
ea$ = 16
dn$ = 24
?add@@YAXW4Size@@GW4DataRegister@@@Z PROC		; add, COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 107
	movzx	r9d, dx
; Line 108
	test	ecx, ecx
	je	SHORT $LN4@add
	sub	ecx, 1
	je	SHORT $LN5@add
	cmp	ecx, 1
	jne	SHORT $LN2@add
; Line 116
	movsxd	rax, r8d
	lea	rdx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
; Line 69
	movzx	ecx, r9w
	mov	rdx, QWORD PTR [rdx+rax*8]
; Line 116
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	mov	ecx, DWORD PTR [rax+rcx*4]
	add	DWORD PTR [rdx], ecx
; Line 118
	ret	0
$LN5@add:
; Line 113
	movsxd	rax, r8d
	lea	rdx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
; Line 66
	movzx	ecx, r9w
	mov	rdx, QWORD PTR [rdx+rax*8]
; Line 113
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	ecx, WORD PTR [rax+rcx*2]
	add	WORD PTR [rdx], cx
; Line 118
	ret	0
$LN4@add:
; Line 110
	movsxd	rax, r8d
	lea	rdx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
; Line 63
	movzx	ecx, r9w
	mov	rdx, QWORD PTR [rdx+rax*8]
; Line 110
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	ecx, BYTE PTR [rcx+rax]
	add	BYTE PTR [rdx], cl
$LN2@add:
; Line 118
	ret	0
?add@@YAXW4Size@@GW4DataRegister@@@Z ENDP		; add
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?add@@YAXW4Size@@W4DataRegister@@G@Z
_TEXT	SEGMENT
size$ = 8
dn$ = 16
ea$ = 24
?add@@YAXW4Size@@W4DataRegister@@G@Z PROC		; add, COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 95
	test	ecx, ecx
	je	SHORT $LN4@add
	sub	ecx, 1
	je	SHORT $LN5@add
	cmp	ecx, 1
	jne	SHORT $LN2@add
; Line 103
	movsxd	rax, edx
	lea	rcx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
; Line 59
	movzx	edx, r8w
; Line 103
	mov	rax, QWORD PTR [rcx+rax*8]
; Line 59
	mov	ecx, DWORD PTR [rax]
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	mov	DWORD PTR [rax+rdx*4], ecx
; Line 105
	ret	0
$LN5@add:
; Line 100
	movsxd	rax, edx
	lea	rcx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
; Line 55
	movzx	edx, r8w
; Line 100
	mov	rax, QWORD PTR [rcx+rax*8]
; Line 55
	movzx	ecx, WORD PTR [rax]
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	mov	WORD PTR [rax+rdx*2], cx
; Line 105
	ret	0
$LN4@add:
; Line 97
	movsxd	rax, edx
	lea	rcx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
; Line 51
	movzx	edx, r8w
; Line 97
	mov	rax, QWORD PTR [rcx+rax*8]
; Line 51
	movzx	ecx, BYTE PTR [rax]
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	mov	BYTE PTR [rdx+rax], cl
$LN2@add:
; Line 105
	ret	0
?add@@YAXW4Size@@W4DataRegister@@G@Z ENDP		; add
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?pea@@YAXG@Z
_TEXT	SEGMENT
address$ = 8
?pea@@YAXG@Z PROC					; pea, COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 90
	mov	rdx, QWORD PTR ?addressRegisters@@3PAPEATregisters@@A+56
	sub	rdx, 16
; Line 91
	movzx	eax, cx
	mov	QWORD PTR ?addressRegisters@@3PAPEATregisters@@A+56, rdx
	mov	DWORD PTR [rdx], eax
; Line 92
	ret	0
?pea@@YAXG@Z ENDP					; pea
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?lea@@YAXGW4AddressRegister@@@Z
_TEXT	SEGMENT
address$ = 8
An$ = 16
?lea@@YAXGW4AddressRegister@@@Z PROC			; lea, COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 86
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	r8d, cx
	movzx	ecx, BYTE PTR [r8+rax]
	movsxd	rax, edx
	lea	rdx, OFFSET FLAT:?addressRegisters@@3PAPEATregisters@@A ; addressRegisters
	mov	QWORD PTR [rdx+rax*8], rcx
; Line 87
	ret	0
?lea@@YAXGW4AddressRegister@@@Z ENDP			; lea
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT getRamSize
_TEXT	SEGMENT
getRamSize PROC						; COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 81
	xor	eax, eax
; Line 82
	ret	0
getRamSize ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT getRamStart
_TEXT	SEGMENT
getRamStart PROC					; COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 77
	lea	rax, OFFSET FLAT:?ramStart@@3PEATmem_union@@EA ; ramStart
; Line 78
	ret	0
getRamStart ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT clearMem
_TEXT	SEGMENT
clearMem PROC						; COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 74
	ret	0
clearMem ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT getLongWord
_TEXT	SEGMENT
address$ = 8
getLongWord PROC					; COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 69
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	edx, cx
	mov	eax, DWORD PTR [rax+rdx*4]
; Line 70
	ret	0
getLongWord ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT getWord
_TEXT	SEGMENT
address$ = 8
getWord	PROC						; COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 66
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	edx, cx
	movzx	eax, WORD PTR [rax+rdx*2]
; Line 67
	ret	0
getWord	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT getByte
_TEXT	SEGMENT
address$ = 8
getByte	PROC						; COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 63
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	edx, cx
	movzx	eax, BYTE PTR [rdx+rax]
; Line 64
	ret	0
getByte	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT addLongWord
_TEXT	SEGMENT
address$ = 8
num$ = 16
addLongWord PROC					; COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 59
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	r8d, cx
	mov	DWORD PTR [rax+r8*4], edx
; Line 60
	ret	0
addLongWord ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT addWord
_TEXT	SEGMENT
address$ = 8
num$ = 16
addWord	PROC						; COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 55
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	r8d, cx
	mov	WORD PTR [rax+r8*2], dx
; Line 56
	ret	0
addWord	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT addByte
_TEXT	SEGMENT
address$ = 8
num$ = 16
addByte	PROC						; COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 51
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	r8d, cx
	mov	BYTE PTR [r8+rax], dl
; Line 52
	ret	0
addByte	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT setLongWord
_TEXT	SEGMENT
address$ = 8
num$ = 16
setLongWord PROC					; COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 47
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	r8d, cx
	mov	DWORD PTR [rax+r8*4], edx
; Line 48
	ret	0
setLongWord ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT setWord
_TEXT	SEGMENT
address$ = 8
num$ = 16
setWord	PROC						; COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 43
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	r8d, cx
	mov	WORD PTR [rax+r8*2], dx
; Line 44
	ret	0
setWord	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT setByte
_TEXT	SEGMENT
address$ = 8
num$ = 16
setByte	PROC						; COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 39
	mov	rax, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	movzx	r8d, cx
	mov	BYTE PTR [r8+rax], dl
; Line 40
	ret	0
setByte	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT close
_TEXT	SEGMENT
close	PROC						; COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 16
$LN11:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 17
	mov	rcx, QWORD PTR ?ramStart@@3PEATmem_union@@EA ; ramStart
	call	QWORD PTR __imp_free
	lea	rbx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
	lea	rdi, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A+64
$LL4@close:
; Line 19
	mov	rcx, QWORD PTR [rbx]
	call	QWORD PTR __imp_free
	add	rbx, 8
	cmp	rbx, rdi
	jl	SHORT $LL4@close
; Line 21
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
close	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT start
_TEXT	SEGMENT
start	PROC						; COMDAT
; File c:\users\fozrucix\workspace\fozrucix\jni\jnithing\jnithing\m68ksimulator.cpp
; Line 6
$LN11:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
; Line 7
	lea	rcx, OFFSET FLAT:??_C@_0BD@JCDCPOBF@DEBUG?5?9?5DLL?5Loaded?$AA@
	call	printf
; Line 8
	xor	ecx, ecx
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR ?ramStart@@3PEATmem_union@@EA, rax ; ramStart
	lea	rbx, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A ; dataRegisters
	lea	rdi, OFFSET FLAT:?dataRegisters@@3PAPEATregisters@@A+64
$LL4@start:
; Line 10
	mov	ecx, 4
	call	QWORD PTR __imp_malloc
	mov	QWORD PTR [rbx], rax
	add	rbx, 8
	cmp	rbx, rdi
	jl	SHORT $LL4@start
; Line 13
	lea	rdx, OFFSET FLAT:?ramStart@@3PEATmem_union@@EA ; ramStart
	mov	DWORD PTR ?programCounter@@3IA, 0	; programCounter
	lea	rcx, OFFSET FLAT:??_C@_0CO@FJDOOOIP@DEBUG?5?9?5M68K?5ram?5created?4?5Starti@
; Line 14
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
; Line 13
	jmp	printf
start	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT printf
_TEXT	SEGMENT
_Format$ = 80
printf	PROC						; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; Line 950
$LN8:
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	push	rbx
	push	rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rcx
; Line 953
	lea	rsi, QWORD PTR _Format$[rsp+8]
; Line 954
	mov	ecx, 1
	call	QWORD PTR __imp___acrt_iob_func
	mov	rbx, rax
; Line 639
	call	__local_stdio_printf_options
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], rsi
	mov	r8, rdi
	mov	rdx, rbx
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vfprintf
; Line 957
	add	rsp, 48					; 00000030H
	pop	rdi
	pop	rsi
	pop	rbx
	ret	0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ PROC ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>, COMDAT
; File c:\program files (x86)\microsoft visual studio 14.0\vc\include\vadefs.h
; Line 146
	ret	0
??$__vcrt_va_start_verify_argument_type@QEBD@@YAXXZ ENDP ; __vcrt_va_start_verify_argument_type<char const * __ptr64 const>
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\stdio.h
; Line 638
$LN4:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rbp
	mov	QWORD PTR [rsp+24], rsi
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rbx, r9
	mov	rdi, r8
	mov	rsi, rdx
	mov	rbp, rcx
; Line 639
	call	__local_stdio_printf_options
	mov	r9, rdi
	mov	QWORD PTR [rsp+32], rbx
	mov	r8, rsi
	mov	rdx, rbp
	mov	rcx, QWORD PTR [rax]
	call	QWORD PTR __imp___stdio_common_vfprintf
; Line 640
	mov	rbx, QWORD PTR [rsp+64]
	mov	rbp, QWORD PTR [rsp+72]
	mov	rsi, QWORD PTR [rsp+80]
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT
; File c:\program files (x86)\windows kits\10\include\10.0.10240.0\ucrt\corecrt_stdio_config.h
; Line 75
	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 76
	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
END
